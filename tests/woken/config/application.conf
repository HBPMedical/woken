# Sample configuration for local execution of Woken

jobs {
  node = "federation"
  owner = "admin@mip.chuv.ch"
  chronosServerUrl = "http://chronos:4400"
  featuresDb = "features"
  featuresTable = "cde_features_a"
  resultDb = "woken"
  metaDb = "meta"
}

db {
  woken {
    jdbc_driver = "org.postgresql.Driver"
    jdbc_url = "jdbc:postgresql://db:5432/woken"
    host = "db"
    port = 5432
    user = "postgres"
    password = "test"
    database = "woken"
    pool_size = 5
  }

  features {
    jdbc_driver = "org.postgresql.Driver"
    jdbc_url = "jdbc:postgresql://db:5432/features"
    host = "db"
    port = 5432
    user = "postgres"
    password = "test"
    database = "features"
    pool_size = 5
  }

  meta {
    jdbc_driver = "org.postgresql.Driver"
    jdbc_url = "jdbc:postgresql://db:5432/meta"
    host = "db"
    port = 5432
    user = "postgres"
    password = "test"
    database = "meta"
    pool_size = 3
  }

}

datasets {

  sample {
    label = "Sample data"
    description = "Sample data"
    tables = ["sample_data"]
    anonymisationLevel = "Anonymised"
  }

  churn {
    label = "Customer churn"
    description = "Customer churn"
    tables = ["churn"]
    anonymisationLevel = "Anonymised"
  }

  desd-synthdata {
    label = "CHUV"
    description = "Demo dataset for CHUV"
    tables = ["cde_features_a"]
    anonymisationLevel = "Anonymised"
  }

  nida-synthdata {
    label = "Brescia"
    description = "Brescia demo"
    tables = ["cde_features_b"]
    anonymisationLevel = "Depersonalised"
  }

  qqmi-synthdata {
    label = "Lille"
    description = "Lille demo"
    tables = ["cde_features_c"]
    anonymisationLevel = "Depersonalised"
  }

}
