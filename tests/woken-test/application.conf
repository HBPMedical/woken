akka {
  loglevel = INFO

  actor {
    # provider = "cluster"

    debug {
      receive = on
      autoreceive = on
      lifecycle = on
      fsm = on
    }
  }

  remote {
    log-sent-messages = on
    log-received-messages = on
    log-remote-lifecycle-events = on

    watch-failure-detector {
      acceptable-heartbeat-pause = 20 s
    }

    artery {
      enabled = on
      transport = tcp

      canonical.hostname = ${clustering.ip} # external (logical) hostname
      canonical.port = ${clustering.port}   # external (logical) port

      bind.hostname = 0.0.0.0         # internal (bind) hostname
      bind.port = ${clustering.port}  # internal (bind) port

    }

  }

  cluster {
    roles = ["test"]

    client {
      initial-contacts = ["akka://"${clustering.cluster.name}"@"${clustering.seed-ip}":"${clustering.seed-port}"/system/receptionist"]
    }
  }

}

clustering {
  ip = "127.0.0.1"
  ip = ${?CLUSTER_IP}
  port = 8197
  port = ${?CLUSTER_PORT}
  seed-ip = "127.0.0.1"
  seed-ip = ${?CLUSTER_IP}
  seed-ip = ${?WOKEN_PORT_8088_TCP_ADDR}
  seed-port = 8088
  seed-port = ${?WOKEN_PORT_8088_TCP_PORT}
  cluster.name = "woken"
  cluster.name = ${?CLUSTER_NAME}
}

kamon {
  zipkin = {
    host ="zipkin"
    port = 9411
  }
  prometheus = {
    host = "prometheus"
    port = 9090
  }
  util.filters {
    "akka.tracked-actor" {
      includes = ["**"]
    }

    "akka.tracked-dispatcher" {
      includes = ["**"]
    }

    "akka.traced-actor" {
      includes = ["**"]
    }

    "test" {
      includes = ["**"]
    }
  }

  system-metrics {
    host {
      enabled = no
    }
  }

}
