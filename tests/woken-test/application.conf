akka {
  loglevel = INFO

  actor {
    provider = "cluster"
    enable-additional-serialization-bindings = on

    debug {
      receive = on
      autoreceive = on
      lifecycle = on
      fsm = on
    }

    serializers {
      query-result-serializer = "eu.hbp.mip.woken.messages.external.QueryResultSerializer"
    }

    serialization-bindings {
      "eu.hbp.mip.woken.messages.external.QueryResult" = query-result-serializer
    }
  }

  remote {
    log-sent-messages = on
    log-received-messages = on
    log-remote-lifecycle-events = on

    netty.tcp {
      hostname = ${clustering.ip} # external (logical) hostname
      port = ${clustering.port}   # external (logical) port

      bind.hostname = 0.0.0.0         # internal (bind) hostname
      bind.port = ${clustering.port}  # internal (bind) port
    }

    artery {
      enabled = off
      canonical.hostname = ${clustering.ip} # external (logical) hostname
      canonical.port = ${clustering.port}   # external (logical) port

      bind.hostname = 0.0.0.0        # internal (bind) hostname
      bind.port = ${clustering.port} # internal (bind) port
    }

    advanced.aeron-dir = "/dev/shm/woken"
  }

  cluster {
    roles = ["test"]

    client {
      initial-contacts = ["akka.tcp://"${clustering.cluster.name}"@"${clustering.seed-ip}":"${clustering.seed-port}"/system/receptionist"]
    }
  }

  extensions = ["akka.cluster.client.ClusterClientReceptionist"]

}

clustering {
  ip = "127.0.0.1"
  ip = ${?CLUSTER_IP}
  port = 1601
  port = ${?CLUSTER_PORT}
  seed-ip = "127.0.0.1"
  seed-ip = ${?CLUSTER_IP}
  seed-ip = ${?WOKEN_PORT_8088_TCP_ADDR}
  seed-port = 8088
  seed-port = ${?WOKEN_PORT_8088_TCP_PORT}
  cluster.name = "woken"
}
