version: '2'

services:
  zoo1:
    image: zookeeper:3.4
    network_mode: "host"
    ports:
       - 2181:2181
       - 127.0.0.1:2888:2888
       - 127.0.0.1:3888:3888

  mesos-master:
    image: mesosphere/mesos-master:1.3.0
    network_mode: "host"
    environment:
      - MESOS_CLUSTER=docker-compose
      - MESOS_ZK=zk://127.0.0.1:2181/mesos
      - MESOS_HOSTNAME=127.0.0.1
      - MESOS_IP=127.0.0.1
      - MESOS_QUORUM=1
      - MESOS_WORK_DIR=/var/lib/mesos

  mesos-slave:
    image: mesosphere/mesos-slave:1.3.0
    network_mode: "host"
    privileged: true
    environment:
      - MESOS_PORT=5051
      - MESOS_MASTER=zk://127.0.0.1:2181/mesos
      - MESOS_HOSTNAME=127.0.0.1
      - MESOS_IP=127.0.0.1
      - MESOS_CONTAINERIZERS=docker,mesos
      - MESOS_WORK_DIR=/var/lib/mesos
      - MESOS_SWITCH_USER=0
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup
      - /usr/bin/docker:/usr/bin/docker.so
      - /var/run/docker.sock:/var/run/docker.sock

  marathon:
    image: mesosphere/marathon:v1.4.5
    network_mode: "host"
    ports:
      - "8080:8080"
    environment:
      - MARATHON_ZK=zk://127.0.0.1:2181/marathon
      - MARATHON_MASTER=zk://127.0.0.1:2181/mesos
      - MARATHON_HOSTNAME=127.0.0.1
      - LIBPROCESS_IP=127.0.0.1
    command: "--event_subscriber http_callback"


  chronos:
    image: mesosphere/chronos:chronos-2.5.0-0.1.20160223054243.ubuntu1404-mesos-0.27.1-2.0.226.ubuntu1404
    command: '/usr/bin/chronos run_jar --http_port 4400 --zk_hosts 127.0.0.1:2181 --master zk://127.0.0.1:2181/mesos'
    network_mode: "host"
    ports:
      - 4400:4400

  # Expose the database to the host, including the Docker container running the algorithms
  woken_db:
    image: "postgres:9.6.2-alpine"
    container_name: "woken-db"
    network_mode: "bridge"
    ports:
      - 65434:5432
    restart: unless-stopped
    environment:
      - POSTGRES_USER=woken
      - POSTGRES_PASSWORD=woken

  wait_dbs:
    image: "waisbrot/wait"
    network_mode: "bridge"
    links:
      - "woken_db:woken_db"
    environment:
      - TARGETS=woken_db:5432

  # Use the latest image built as this is what is under test
  woken_db_setup:
    image: "hbpmip/woken-db-setup:b22cb6c"
    container_name: "woken-db-setup"
    network_mode: "bridge"
    environment:
      - FLYWAY_DBMS=postgresql
      - FLYWAY_HOST=db
      - FLYWAY_PORT=5432
      - FLYWAY_DATABASE_NAME=woken
      - FLYWAY_USER=woken
      - FLYWAY_PASSWORD=woken
    links:
     - "woken_db:db"

  # Expose the database to the host, including the Docker container running the algorithms
  sciencedb:
    image: postgres:9.4.5
    container_name: "science_db"
    network_mode: "bridge"
    ports:
      - 65432:5432
    volumes:
      - ./sample-datasets-db/sql:/docker-entrypoint-initdb.d/
    environment:
      POSTGRES_PASSWORD: test

  # Expose the database to the host
  metadb:
    image: postgres:9.4.5
    network_mode: "bridge"
    ports:
      - 65433:5432
    volumes:
      - ./sample-datasets-db/meta/sql:/docker-entrypoint-initdb.d/
    environment:
      POSTGRES_PASSWORD: test

  woken-validation:
    image: hbpmip/woken-validation:latest
    network_mode: "host"
    volumes:
      - ./woken/config/validation/application.conf:/opt/woken-validation/config/application.conf
    ports:
      - 8082:8082
