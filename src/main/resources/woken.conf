
app {
  # Name of the application
  name = "Woken"
  # Type of the application
  type = "Scala"

  dockerBridgeNetwork = "bridge"
  dockerBridgeNetwork = ${?DOCKER_BRIDGE_NETWORK}
  networkInterface = "0.0.0.0"
  networkInterface = ${?NETWORK_INTERFACE}

  webServicesPort = 8087
  webServicesPort = ${?WEB_SERVICES_PORT}
  webServicesHttps = off
  webServicesHttps = ${?WEB_SERVICES_SECURE}

  basicAuth {
    user = "admin"
    user = ${?WEB_SERVICES_USER}
    password = "WoKeN"
    user = ${?WEB_SERVICES_PASSWORD}
  }

}

clustering {
  ip = "127.0.0.1"
  ip = ${?CLUSTER_IP}
  port = 8088
  port = ${?CLUSTER_PORT}
}

akka {
  cluster {
    roles = ["woken"]
  }
}

poolResizer {

  entryPoint {
    enabled = on
    lower-bound = 5
    # The most number of routees the router should ever have.
    # Must be greater than or equal to lower-bound.
    upper-bound = 50
    upper-bound = ${?ENTRY_POINT_LIMIT}
    action-interval = 5s
    downsize-after-underutilized-for = 72h
  }

  miningQueries {
    enabled = on
    lower-bound = 1
    # The most number of routees the router should ever have.
    # Must be greater than or equal to lower-bound.
    upper-bound = 50
    upper-bound = ${?MINING_LIMIT}
    action-interval = 5s
    downsize-after-underutilized-for = 72h
  }

  experimentQueries {
    enabled = on
    lower-bound = 1
    # The most number of routees the router should ever have.
    # Must be greater than or equal to lower-bound.
    upper-bound = 50
    upper-bound = ${?EXPERIMENT_LIMIT}
    action-interval = 5s
    downsize-after-underutilized-for = 72h
  }

  metadataQueries {
    enabled = on
    lower-bound = 1
    # The most number of routees the router should ever have.
    # Must be greater than or equal to lower-bound.
    upper-bound = 50
    upper-bound = ${?METADATA_LIMIT}
    action-interval = 5s
    downsize-after-underutilized-for = 72h
  }

}
