akka {
  loglevel = "WARNING"
  stdout-loglevel = "WARNING"
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  log-config-on-start = off

  log-dead-letters = 10
  log-dead-letters-during-shutdown = off

  actor {
    provider = "local"
  }
}

poolResizer {

  mining {
    enabled = on
    lower-bound = 1
    # The most number of routees the router should ever have.
    # Must be greater than or equal to lower-bound.
    upper-bound = 5
    action-interval = 5s
    downsize-after-underutilized-for = 72h
  }

}

app {
  clusterSystemName = "woken"
  dockerBridgeNetwork = "woken"
  networkInterface ="localhost"
  jobServiceName = "test"
  webServicesPort = 8087
  master.router {
    actors {
      mining.limit = 5
      experiment.limit = 5
    }
  }

  basicAuth {
    user = "admin"
    password = "WoKeN"
  }
}

jobs {
  node = "federation"
  owner = "admin@mip.chuv.ch"
  chronosServerUrl = "http://localhost:9999"
  resultDb = "woken"
  metaDb = "meta"
  defaults {
    job {
      cpus = 1.0
      memory = 792
    }
    features {
      database = "features_db"
      table = {
        schema = "public"
        name = "features"
      }
    }
  }
}

db {
  woken {
    jdbc_driver = "org.postgresql.Driver"
    jdbc_url = "jdbc:postgresql://db.nowhere.local:5432/woken"
    host = "db"
    port = 5432
    user = "woken"
    password = "woken"
    database = "woken"
    schema = "public"
    pool_size = 1
  }

  features_db {
    jdbc_driver = "org.postgresql.Driver"
    jdbc_url = "jdbc:postgresql://db.nowhere.local:5432/features"
    host = "db"
    port = 5432
    user = "features"
    password = "features"
    database = "features"
    schema = "public"
    pool_size = 1

    tables {
      "sample_data" {
        primaryKey = [
          {
            name = "ID"
            sqlType = "int"
          }
        ]
      }
      "churn" {
        primaryKey = []
      }
      "cde_features_a" {
        primaryKey = [
          {
            name = "subjectcode"
            sqlType = "varchar"
          }
        ]
        datasetColumn = {
          name = "dataset"
          sqlType = "varchar"
        }
      }
      "cde_features_b" {
        primaryKey = [
          {
            name = "subjectcode"
            sqlType = "varchar"
          }
        ]
        datasetColumn = {
          name = "dataset"
          sqlType = "varchar"
        }
      }
      "cde_features_c" {
        primaryKey = [
          {
            name = "subjectcode"
            sqlType = "varchar"
          }
        ]
        datasetColumn = {
          name = "dataset"
          sqlType = "varchar"
        }
      }
      "mip_cde_features" {
        primaryKey = [
          {
            name = "subjectcode"
            sqlType = "varchar"
          }
        ]
        datasetColumn = {
          name = "dataset"
          sqlType = "varchar"
        }
      }
    }

  }

  meta {
    jdbc_driver = "org.postgresql.Driver"
    jdbc_url = "jdbc:postgresql://db.nowhere.local:5432/meta"
    host = "db"
    port = 5432
    user = "meta"
    password = "meta"
    database = "meta"
    schema = "public"
    pool_size = 1
  }

}
